'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useOnboarding } from '@/hooks/use-onboarding';\nimport { \n  Calendar,\n  CheckCircle2,\n  Circle,\n  Target,\n  TrendingUp,\n  Clock,\n  BarChart3,\n  Plus,\n  ChevronRight,\n  Sparkles,\n  Activity,\n  Zap,\n  Trophy,\n  Star,\n  Filter,\n  Search,\n  Bell,\n  Settings,\n  MoreHorizontal\n} from 'lucide-react';\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { EnhancedButton } from '@/components/ui/enhanced-button';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { QuickCapture } from '@/components/quick-capture/QuickCapture';\nimport { EnhancedLayout, PageHeader, Section, Container, QuickAction } from '@/components/layout/enhanced-layout';\nimport { Loading, StateLoading } from '@/components/ui/enhanced-loading';\nimport { SkeletonCard, SkeletonList } from '@/components/ui/enhanced-skeleton';\nimport { toast } from '@/components/ui/enhanced-toast';\nimport Link from 'next/link';\n\ninterface DashboardData {\n  stats: {\n    tasksToday: number;\n    tasksCompleted: number;\n    focusTime: number;\n    streakDays: number;\n    weeklyProgress: number;\n    productivityScore: number;\n    goalProgress: number;\n    habitStreak: number;\n  };\n  upcomingTasks: Array<{\n    id: string;\n    title: string;\n    time: string;\n    priority: 'high' | 'medium' | 'low';\n    dueDate?: string;\n    category: string;\n    completed: boolean;\n  }>;\n  habits: Array<{\n    id: string;\n    name: string;\n    completed: boolean;\n    streak: number;\n    category?: string;\n    target: number;\n    current: number;\n  }>;\n  goals: Array<{\n    id: string;\n    title: string;\n    progress: number;\n    dueDate?: string;\n    category: string;\n    milestone: string;\n  }>;\n  recentActivity: Array<{\n    id: string;\n    type: 'task_completed' | 'habit_tracked' | 'goal_updated' | 'milestone_reached';\n    message: string;\n    timestamp: string;\n    icon: string;\n  }>;\n  insights: Array<{\n    id: string;\n    type: 'tip' | 'achievement' | 'suggestion';\n    title: string;\n    description: string;\n    action?: string;\n  }>;\n}\n\nconst MOCK_USER = { id: 'test-user', firstName: 'Alex', lastName: 'Chen' };\n\nexport default function DashboardEnhanced() {\n  const router = useRouter();\n  const { isCompleted, onboardingData, isClient } = useOnboarding();\n  const [view, setView] = useState('overview');\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const user = MOCK_USER;\n  \n  // Check if onboarding is completed\n  useEffect(() => {\n    if (isClient && isCompleted === false) {\n      router.push('/onboarding');\n    }\n    \n    // Simulate loading\n    const timer = setTimeout(() => setLoading(false), 1500);\n    return () => clearTimeout(timer);\n  }, [isCompleted, router, isClient]);\n  \n  const [data] = useState<DashboardData>({\n    stats: {\n      tasksToday: 8,\n      tasksCompleted: 5,\n      focusTime: 180,\n      streakDays: 12,\n      weeklyProgress: 68,\n      productivityScore: 85,\n      goalProgress: 72,\n      habitStreak: 15\n    },\n    upcomingTasks: [\n      { \n        id: '1', \n        title: 'Complete quarterly review presentation', \n        time: '9:00 AM', \n        priority: 'high', \n        category: 'Work',\n        completed: false\n      },\n      { \n        id: '2', \n        title: 'Team standup meeting', \n        time: '2:00 PM', \n        priority: 'medium', \n        category: 'Meetings',\n        completed: false\n      },\n      { \n        id: '3', \n        title: 'Review pull requests', \n        time: '4:00 PM', \n        priority: 'low', \n        category: 'Development',\n        completed: true\n      },\n      { \n        id: '4', \n        title: 'Plan weekend trip', \n        time: '6:00 PM', \n        priority: 'low', \n        category: 'Personal',\n        completed: false\n      }\n    ],\n    habits: [\n      { id: '1', name: 'Morning meditation', completed: true, streak: 12, category: 'wellness', target: 1, current: 1 },\n      { id: '2', name: 'Read for 30 minutes', completed: false, streak: 8, category: 'learning', target: 30, current: 0 },\n      { id: '3', name: 'Exercise', completed: true, streak: 15, category: 'health', target: 60, current: 45 },\n      { id: '4', name: 'Journal writing', completed: false, streak: 5, category: 'mindfulness', target: 1, current: 0 },\n      { id: '5', name: 'Drink 8 glasses of water', completed: true, streak: 20, category: 'health', target: 8, current: 6 }\n    ],\n    goals: [\n      { id: '1', title: 'Launch new product', progress: 75, dueDate: 'Dec 31', category: 'Work', milestone: 'Beta testing complete' },\n      { id: '2', title: 'Learn TypeScript', progress: 60, dueDate: 'Nov 30', category: 'Learning', milestone: 'Build first project' },\n      { id: '3', title: 'Run a marathon', progress: 40, dueDate: 'Mar 15', category: 'Health', milestone: 'Complete 15km run' },\n      { id: '4', title: 'Write a book', progress: 25, dueDate: 'Jun 30', category: 'Personal', milestone: 'Finish outline' }\n    ],\n    recentActivity: [\n      { id: '1', type: 'task_completed', message: 'Completed \"Review pull requests\"', timestamp: '2 hours ago', icon: 'âœ…' },\n      { id: '2', type: 'habit_tracked', message: 'Logged morning meditation', timestamp: '4 hours ago', icon: 'ðŸ§˜' },\n      { id: '3', type: 'milestone_reached', message: 'Reached 75% on product launch goal', timestamp: '1 day ago', icon: 'ðŸŽ¯' },\n      { id: '4', type: 'goal_updated', message: 'Updated TypeScript learning progress', timestamp: '2 days ago', icon: 'ðŸ“š' }\n    ],\n    insights: [\n      {\n        id: '1',\n        type: 'tip',\n        title: 'Peak Performance Window',\n        description: 'You\\'re most productive between 9-11 AM. Schedule important tasks during this time.',\n        action: 'Optimize Schedule'\n      },\n      {\n        id: '2',\n        type: 'achievement',\n        title: 'Consistency Champion',\n        description: 'You\\'ve maintained a 12-day streak! Your habits are becoming second nature.',\n        action: 'View Streaks'\n      },\n      {\n        id: '3',\n        type: 'suggestion',\n        title: 'Break Reminder',\n        description: 'Consider adding 5-minute breaks every hour to maintain energy levels.',\n        action: 'Set Reminders'\n      }\n    ]\n  });\n  \n  const greeting = getGreeting();\n  const todayFormatted = new Date().toLocaleDateString('en-US', { \n    weekday: 'long', \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  });\n\n  function getGreeting() {\n    const hour = new Date().getHours();\n    if (hour < 12) return 'Good morning';\n    if (hour < 18) return 'Good afternoon';\n    return 'Good evening';\n  }\n\n  const handleQuickAdd = async (input: string) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      toast.success('Task added successfully!', `\"${input}\" has been added to your tasks.`);\n    } catch (error) {\n      toast.error('Failed to add task', 'Please try again.');\n    }\n  };\n\n  const quickActions = [\n    {\n      icon: <Plus className=\"h-5 w-5\" />,\n      label: \"Add Task\",\n      onClick: () => toast.info('Quick add', 'Task creation dialog would open here')\n    },\n    {\n      icon: <Calendar className=\"h-5 w-5\" />,\n      label: \"New Event\",\n      onClick: () => toast.info('Calendar', 'Event creation dialog would open here')\n    },\n    {\n      icon: <Target className=\"h-5 w-5\" />,\n      label: \"Create Goal\",\n      onClick: () => router.push('/goals')\n    }\n  ];\n\n  if (!isClient || isCompleted === null) {\n    return (\n      <EnhancedLayout>\n        <Loading fullScreen message=\"Loading your dashboard...\" />\n      </EnhancedLayout>\n    );\n  }\n\n  return (\n    <EnhancedLayout\n      variant=\"default\"\n      containerSize=\"full\"\n      header={\n        <div className=\"flex items-center justify-between w-full\">\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/dashboard\" className=\"flex items-center gap-2\">\n              <Calendar className=\"h-6 w-6 text-primary\" />\n              <span className=\"text-lg font-bold gradient-text\">Astral Chronos</span>\n            </Link>\n          </div>\n          \n          <nav className=\"hidden md:flex items-center gap-2\">\n            <EnhancedButton variant=\"ghost\" size=\"sm\" asChild>\n              <Link href=\"/calendar\">Calendar</Link>\n            </EnhancedButton>\n            <EnhancedButton variant=\"ghost\" size=\"sm\" asChild>\n              <Link href=\"/goals\">Goals</Link>\n            </EnhancedButton>\n            <EnhancedButton variant=\"ghost\" size=\"sm\" asChild>\n              <Link href=\"/habits\">Habits</Link>\n            </EnhancedButton>\n            <EnhancedButton variant=\"ghost\" size=\"sm\" asChild>\n              <Link href=\"/analytics\">Analytics</Link>\n            </EnhancedButton>\n          </nav>\n          \n          <div className=\"flex items-center gap-2\">\n            <EnhancedButton variant=\"ghost\" size=\"icon\">\n              <Search className=\"h-4 w-4\" />\n            </EnhancedButton>\n            <EnhancedButton variant=\"ghost\" size=\"icon\">\n              <Bell className=\"h-4 w-4\" />\n            </EnhancedButton>\n            <EnhancedButton variant=\"ghost\" size=\"icon\">\n              <Settings className=\"h-4 w-4\" />\n            </EnhancedButton>\n          </div>\n        </div>\n      }\n    >\n      <Container className=\"space-y-8\">\n        {/* Welcome Section */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6 }}\n        >\n          <PageHeader\n            title={`${greeting}, ${user?.firstName || 'there'}! ðŸ‘‹`}\n            description={todayFormatted}\n            size=\"lg\"\n            action={\n              <div className=\"flex items-center gap-4\">\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-muted-foreground\">Productivity Score</p>\n                  <div className=\"flex items-center gap-2\">\n                    <p className=\"text-2xl font-bold gradient-text\">\n                      {data.stats.productivityScore}%\n                    </p>\n                    <Badge variant=\"secondary\">\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\n                      +5%\n                    </Badge>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-muted-foreground\">Current Streak</p>\n                  <p className=\"text-2xl font-bold flex items-center gap-1\">\n                    ðŸ”¥ {data.stats.streakDays}\n                  </p>\n                </div>\n              </div>\n            }\n          />\n        </motion.div>\n\n        {/* Quick Capture */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.1 }}\n        >\n          <QuickCapture onSubmit={handleQuickAdd} />\n        </motion.div>\n\n        {/* Stats Overview */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.2 }}\n        >\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n            <Card variant=\"elevated\" interactive className=\"group\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Tasks Today</CardTitle>\n                <CheckCircle2 className=\"h-4 w-4 text-muted-foreground group-hover:text-success transition-colors\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {data.stats.tasksCompleted}/{data.stats.tasksToday}\n                </div>\n                <Progress \n                  value={(data.stats.tasksCompleted / data.stats.tasksToday) * 100} \n                  className=\"mt-2\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  {data.stats.tasksToday - data.stats.tasksCompleted} remaining\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card variant=\"elevated\" interactive className=\"group\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Focus Time</CardTitle>\n                <Clock className=\"h-4 w-4 text-muted-foreground group-hover:text-primary transition-colors\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {Math.floor(data.stats.focusTime / 60)}h {data.stats.focusTime % 60}m\n                </div>\n                <div className=\"flex items-center gap-2 mt-2\">\n                  <Progress value={75} className=\"flex-1\" />\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    Goal: 4h\n                  </Badge>\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  {240 - data.stats.focusTime} min to goal\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card variant=\"elevated\" interactive className=\"group\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Weekly Progress</CardTitle>\n                <TrendingUp className=\"h-4 w-4 text-muted-foreground group-hover:text-info transition-colors\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{data.stats.weeklyProgress}%</div>\n                <Progress value={data.stats.weeklyProgress} className=\"mt-2\" />\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  Ahead of last week by 12%\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card variant=\"elevated\" interactive className=\"group\">\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Active Goals</CardTitle>\n                <Target className=\"h-4 w-4 text-muted-foreground group-hover:text-warning transition-colors\" />\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">{data.goals.length}</div>\n                <div className=\"flex items-center gap-1 mt-2\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    Avg. progress: {Math.round(data.goals.reduce((acc, goal) => acc + goal.progress, 0) / data.goals.length)}%\n                  </div>\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  2 due this month\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </motion.div>\n\n        {/* Main Content Tabs */}\n        <Tabs value={view} onValueChange={setView} className=\"space-y-6\">\n          <div className=\"flex items-center justify-between\">\n            <TabsList className=\"grid w-auto grid-cols-4 lg:grid-cols-6\">\n              <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n              <TabsTrigger value=\"tasks\">Tasks</TabsTrigger>\n              <TabsTrigger value=\"habits\">Habits</TabsTrigger>\n              <TabsTrigger value=\"goals\">Goals</TabsTrigger>\n              <TabsTrigger value=\"analytics\" className=\"hidden lg:flex\">Analytics</TabsTrigger>\n              <TabsTrigger value=\"insights\" className=\"hidden lg:flex\">Insights</TabsTrigger>\n            </TabsList>\n            \n            <div className=\"flex items-center gap-2\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search...\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"pl-8 w-64\"\n                />\n              </div>\n              <EnhancedButton variant=\"outline\" size=\"icon\">\n                <Filter className=\"h-4 w-4\" />\n              </EnhancedButton>\n            </div>\n          </div>\n\n          <AnimatePresence mode=\"wait\">\n            <TabsContent value=\"overview\" className=\"space-y-6\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                transition={{ duration: 0.3 }}\n                className=\"grid gap-6 lg:grid-cols-3\"\n              >\n                {/* Upcoming Tasks */}\n                <Card variant=\"elevated\">\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <CardTitle>Upcoming Tasks</CardTitle>\n                        <CardDescription>Your tasks for today</CardDescription>\n                      </div>\n                      <Badge variant=\"secondary\">\n                        {data.upcomingTasks.filter(t => !t.completed).length} pending\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    {loading ? (\n                      <SkeletonList items={3} showAvatar={false} />\n                    ) : (\n                      <div className=\"space-y-3\">\n                        {data.upcomingTasks.slice(0, 4).map(task => (\n                          <motion.div \n                            key={task.id} \n                            className=\"flex items-center justify-between p-3 rounded-lg hover:bg-muted/50 transition-colors cursor-pointer\"\n                            whileHover={{ scale: 1.02 }}\n                            whileTap={{ scale: 0.98 }}\n                          >\n                            <div className=\"flex items-center gap-3 flex-1\">\n                              {task.completed ? (\n                                <CheckCircle2 className=\"h-4 w-4 text-success\" />\n                              ) : (\n                                <Circle className=\"h-4 w-4 text-muted-foreground\" />\n                              )}\n                              <div className=\"flex-1\">\n                                <p className={`text-sm font-medium ${task.completed ? 'line-through text-muted-foreground' : ''}`}>\n                                  {task.title}\n                                </p>\n                                <div className=\"flex items-center gap-2 mt-1\">\n                                  <p className=\"text-xs text-muted-foreground\">{task.time}</p>\n                                  <Badge variant=\"outline\" className=\"text-xs\">\n                                    {task.category}\n                                  </Badge>\n                                </div>\n                              </div>\n                            </div>\n                            <Badge variant={task.priority === 'high' ? 'destructive' : task.priority === 'medium' ? 'default' : 'secondary'} className=\"text-xs\">\n                              {task.priority}\n                            </Badge>\n                          </motion.div>\n                        ))}\n                      </div>\n                    )}\n                    <EnhancedButton variant=\"ghost\" className=\"w-full mt-4\" asChild>\n                      <Link href=\"/tasks\">\n                        View all tasks\n                        <ChevronRight className=\"h-4 w-4 ml-1\" />\n                      </Link>\n                    </EnhancedButton>\n                  </CardContent>\n                </Card>\n\n                {/* Daily Habits */}\n                <Card variant=\"elevated\">\n                  <CardHeader>\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <CardTitle>Daily Habits</CardTitle>\n                        <CardDescription>Track your daily routines</CardDescription>\n                      </div>\n                      <Badge variant=\"secondary\">\n                        {data.habits.filter(h => h.completed).length}/{data.habits.length} done\n                      </Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    {loading ? (\n                      <SkeletonList items={4} showAvatar={false} />\n                    ) : (\n                      <div className=\"space-y-3\">\n                        {data.habits.map(habit => (\n                          <motion.div \n                            key={habit.id} \n                            className=\"flex items-center justify-between p-3 rounded-lg hover:bg-muted/50 transition-colors cursor-pointer\"\n                            whileHover={{ scale: 1.02 }}\n                            whileTap={{ scale: 0.98 }}\n                          >\n                            <div className=\"flex items-center gap-3 flex-1\">\n                              {habit.completed ? (\n                                <CheckCircle2 className=\"h-4 w-4 text-success\" />\n                              ) : (\n                                <Circle className=\"h-4 w-4 text-muted-foreground\" />\n                              )}\n                              <div className=\"flex-1\">\n                                <p className=\"text-sm font-medium\">{habit.name}</p>\n                                <div className=\"flex items-center gap-2 mt-1\">\n                                  <p className=\"text-xs text-muted-foreground\">\n                                    ðŸ”¥ {habit.streak} day streak\n                                  </p>\n                                  {habit.current > 0 && habit.target > 1 && (\n                                    <Badge variant=\"outline\" className=\"text-xs\">\n                                      {habit.current}/{habit.target}\n                                    </Badge>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                            <EnhancedButton \n                              size=\"sm\" \n                              variant={habit.completed ? \"secondary\" : \"outline\"}\n                              onClick={() => {\n                                const action = habit.completed ? 'unmarked' : 'marked';\n                                toast.success(`Habit ${action}!`, `${habit.name} has been ${action} as ${habit.completed ? 'incomplete' : 'complete'}.`);\n                              }}\n                            >\n                              {habit.completed ? \"Done\" : \"Mark\"}\n                            </EnhancedButton>\n                          </motion.div>\n                        ))}\n                      </div>\n                    )}\n                    <EnhancedButton variant=\"ghost\" className=\"w-full mt-4\" asChild>\n                      <Link href=\"/habits\">\n                        Manage habits\n                        <ChevronRight className=\"h-4 w-4 ml-1\" />\n                      </Link>\n                    </EnhancedButton>\n                  </CardContent>\n                </Card>\n\n                {/* Goal Progress & Activity */}\n                <div className=\"space-y-6\">\n                  {/* Goal Progress */}\n                  <Card variant=\"elevated\">\n                    <CardHeader>\n                      <CardTitle>Goal Progress</CardTitle>\n                      <CardDescription>Your active goals</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      {loading ? (\n                        <SkeletonList items={3} showAvatar={false} />\n                      ) : (\n                        <div className=\"space-y-4\">\n                          {data.goals.slice(0, 3).map(goal => (\n                            <div key={goal.id} className=\"space-y-2\">\n                              <div className=\"flex items-center justify-between\">\n                                <p className=\"text-sm font-medium\">{goal.title}</p>\n                                <div className=\"flex items-center gap-2\">\n                                  <p className=\"text-sm text-muted-foreground\">{goal.progress}%</p>\n                                  {goal.progress >= 75 && (\n                                    <Star className=\"h-3 w-3 text-yellow-500\" />\n                                  )}\n                                </div>\n                              </div>\n                              <Progress value={goal.progress} className=\"h-2\" />\n                              <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n                                <span>{goal.milestone}</span>\n                                {goal.dueDate && <span>Due {goal.dueDate}</span>}\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                      <EnhancedButton variant=\"ghost\" className=\"w-full mt-4\" asChild>\n                        <Link href=\"/goals\">\n                          View all goals\n                          <ChevronRight className=\"h-4 w-4 ml-1\" />\n                        </Link>\n                      </EnhancedButton>\n                    </CardContent>\n                  </Card>\n\n                  {/* Recent Activity */}\n                  <Card variant=\"elevated\">\n                    <CardHeader>\n                      <CardTitle>Recent Activity</CardTitle>\n                      <CardDescription>Your latest accomplishments</CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        {data.recentActivity.slice(0, 4).map(activity => (\n                          <div key={activity.id} className=\"flex items-center gap-3 p-2 rounded-lg hover:bg-muted/50 transition-colors\">\n                            <div className=\"w-8 h-8 rounded-full bg-muted flex items-center justify-center text-sm\">\n                              {activity.icon}\n                            </div>\n                            <div className=\"flex-1\">\n                              <p className=\"text-sm font-medium\">{activity.message}</p>\n                              <p className=\"text-xs text-muted-foreground\">{activity.timestamp}</p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              </motion.div>\n\n              {/* AI Insights */}\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.3 }}\n              >\n                <Card variant=\"gradient\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Sparkles className=\"h-5 w-5 text-primary\" />\n                      AI Insights & Recommendations\n                    </CardTitle>\n                    <CardDescription>\n                      Personalized recommendations based on your patterns\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid gap-4 md:grid-cols-3\">\n                      {data.insights.map(insight => (\n                        <motion.div\n                          key={insight.id}\n                          className={`p-4 rounded-lg border ${\n                            insight.type === 'tip' ? 'border-primary/20 bg-primary/5' :\n                            insight.type === 'achievement' ? 'border-success/20 bg-success/5' :\n                            'border-info/20 bg-info/5'\n                          }`}\n                          whileHover={{ scale: 1.02 }}\n                        >\n                          <div className=\"flex items-start justify-between mb-2\">\n                            <h4 className=\"font-medium\">{insight.title}</h4>\n                            <Badge variant=\"outline\" className=\"text-xs\">\n                              {insight.type}\n                            </Badge>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground mb-3\">\n                            {insight.description}\n                          </p>\n                          {insight.action && (\n                            <EnhancedButton \n                              size=\"sm\" \n                              variant=\"outline\" \n                              className=\"w-full\"\n                              onClick={() => toast.info('Action clicked', `${insight.action} feature would be triggered.`)}\n                            >\n                              {insight.action}\n                            </EnhancedButton>\n                          )}\n                        </motion.div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            </TabsContent>\n\n            {/* Other tab contents would go here */}\n            <TabsContent value=\"tasks\">\n              <Card variant=\"elevated\">\n                <CardHeader>\n                  <CardTitle>Task Management</CardTitle>\n                  <CardDescription>All your tasks in one place</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <StateLoading \n                    state=\"loading\" \n                    loadingMessage=\"Building your task view...\" \n                    size=\"lg\"\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"habits\">\n              <Card variant=\"elevated\">\n                <CardHeader>\n                  <CardTitle>Habit Tracking</CardTitle>\n                  <CardDescription>Build better habits with smart tracking</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <StateLoading \n                    state=\"loading\" \n                    loadingMessage=\"Loading your habits...\" \n                    size=\"lg\"\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"goals\">\n              <Card variant=\"elevated\">\n                <CardHeader>\n                  <CardTitle>Goals & Milestones</CardTitle>\n                  <CardDescription>Track progress towards your long-term objectives</CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <StateLoading \n                    state=\"loading\" \n                    loadingMessage=\"Loading your goals...\" \n                    size=\"lg\"\n                  />\n                </CardContent>\n              </Card>\n            </TabsContent>\n          </AnimatePresence>\n        </Tabs>\n      </Container>\n      \n      {/* Quick Action FAB */}\n      <QuickAction actions={quickActions} position=\"bottom-right\" />\n    </EnhancedLayout>\n  );\n}"