# Quantum's Kubernetes Namespace Configuration
# Isolated environments with resource quotas and network policies

apiVersion: v1
kind: Namespace
metadata:
  name: astral-planner-production
  labels:
    app.kubernetes.io/name: astral-planner
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: namespace
    app.kubernetes.io/part-of: astral-planner
    environment: production
    managed-by: quantum-devops
  annotations:
    quantum.io/security-policy: "strict"
    quantum.io/network-policy: "enabled"
    quantum.io/monitoring: "enabled"
---
apiVersion: v1
kind: Namespace
metadata:
  name: astral-planner-staging
  labels:
    app.kubernetes.io/name: astral-planner
    app.kubernetes.io/instance: staging
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: namespace
    app.kubernetes.io/part-of: astral-planner
    environment: staging
    managed-by: quantum-devops
  annotations:
    quantum.io/security-policy: "moderate"
    quantum.io/network-policy: "enabled"
    quantum.io/monitoring: "enabled"
---
# Resource Quotas for Production
apiVersion: v1
kind: ResourceQuota
metadata:
  name: production-quota
  namespace: astral-planner-production
spec:
  hard:
    requests.cpu: "20"
    requests.memory: 40Gi
    limits.cpu: "50"
    limits.memory: 100Gi
    persistentvolumeclaims: "10"
    services: "20"
    secrets: "50"
    configmaps: "50"
    count/deployments.apps: "20"
    count/replicasets.apps: "50"
    count/pods: "100"
---
# Resource Quotas for Staging
apiVersion: v1
kind: ResourceQuota
metadata:
  name: staging-quota
  namespace: astral-planner-staging
spec:
  hard:
    requests.cpu: "10"
    requests.memory: 20Gi
    limits.cpu: "20"
    limits.memory: 40Gi
    persistentvolumeclaims: "5"
    services: "10"
    secrets: "25"
    configmaps: "25"
    count/deployments.apps: "10"
    count/replicasets.apps: "25"
    count/pods: "50"
---
# Network Policies - Production
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: production-network-policy
  namespace: astral-planner-production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: astral-planner
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
# Network Policies - Staging
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: staging-network-policy
  namespace: astral-planner-staging
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app.kubernetes.io/part-of: astral-planner
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80